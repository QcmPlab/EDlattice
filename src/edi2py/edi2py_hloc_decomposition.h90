
! ED_HLOC_DECOMPOSITION:
! these are "overloaded" in lanc_ed.py based on the shape of Hloc/Hvec
subroutine set_hloc_nn(Hloc)
  USE EDIPACK, only: ed_set_Hloc,Nspin,Norb
  USE SCIFOR, only: assert_shape
  implicit none
  real(8),dimension(:,:,:,:),intent(in) :: Hloc
  call assert_shape(Hloc,[Nspin,Nspin,Norb,Norb],"set_Hloc","Hloc")
  call ed_set_Hloc(Hloc)
end subroutine set_hloc_nn
! 
subroutine set_hloc_so(Hloc)
  USE EDIPACK, only: ed_set_Hloc,Nspin,Norb
  USE SCIFOR, only: assert_shape
  implicit none
  real(8),dimension(:,:),intent(in) :: Hloc
  call assert_shape(Hloc,[Nspin*Norb,Nspin*Norb],"set_Hloc","Hloc")
  call ed_set_Hloc(Hloc)
end subroutine set_hloc_so
! 
subroutine set_hloc_symm(Hvec,lambdavec)
  USE EDIPACK, only: ed_set_Hloc,Nspin,Norb
  USE SCIFOR, only: assert_shape
  implicit none
  real(8),dimension(:,:,:,:,:),intent(in) :: Hvec
  real(8),dimension(:),intent(in)            :: lambdavec
  integer                                    :: N
  N = size(Hvec,5)
  call assert_shape(Hvec,[Nspin,Nspin,Norb,Norb,N],"set_Hloc","Hvec")
  if(size(lambdavec)/=N)stop "set_Hloc ERROR: dim(lambdavec)/=dim(Hvec,5)"
  call ed_set_Hloc(Hvec,lambdavec)
end subroutine set_hloc_symm
